# aws cloudformation --region eu-west-1 create-stack --template-body file://IaC/DocsBucket.yml --capabilities CAPABILITY_NAMED_IAM --stack-name docs-bucket --tags Key=iit-billing-tag,Value=docs-test --parameters ParameterKey=DHostName,ParameterValue=docs-test.cd.percona.com ParameterKey=DShortName,ParameterValue=docs-test
---
AWSTemplateFormatVersion: 2010-09-09
Parameters:

  DHostName:
    Default: docs-test.cd.percona.com
    Description: Fully Qualified Domain Name
    Type: String
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '^[a-z][a-z0-9\.\-]*$'
    ConstraintDescription: must begin with a letter and must contain only lowercase letters, numbers, periods (.), and dashes (-).

  DShortName:
    Default: docs-test
    Description: Short host name
    Type: String
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '^[a-z][a-z0-9\.\-]*$'
    ConstraintDescription: must begin with a letter and must contain only lowercase letters, numbers, periods (.), and dashes (-).

  ZoneId:
    Default: Z1H0AFAU7N8IMC
    Description: Hosted Zone ID
    Type: AWS::Route53::HostedZone::Id

Mappings:
  RegionMap:
    us-east-1:
      S3hostedzoneID: Z3AQBSTGFYJSTF
      websiteendpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3hostedzoneID: Z2F56UZL2M1ACD
      websiteendpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3hostedzoneID: Z3BJ6K6RIION7M
      websiteendpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3hostedzoneID: Z1BKCTXD74EZPE
      websiteendpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3hostedzoneID: Z3O0J2DXBE1FTB
      websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3hostedzoneID: Z1WCIGYICN2BYD
      websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3hostedzoneID: Z2M4EHUR26P7ZW
      websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3hostedzoneID: Z31GFT0UA1I2HV
      websiteendpoint: s3-website-sa-east-1.amazonaws.com

Resources:

  DocsBucket: # S3 bucket for store docs prototypes
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DHostName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      VersioningConfiguration:
        Status: Suspended
      Tags:
      - Key: iit-billing-tag
        Value: !Ref DShortName

  TravisUser: # create standalone user for travis-ci jobs
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref DShortName
      Path: /
      Policies:
      - PolicyName: !Ref DShortName
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - s3:ListBucket
            - s3:GetObject
            - s3:GetObjectAcl
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:DeleteObject
            - s3:AbortMultipartUpload
            Resource: !Join [ '', [ 'arn:aws:s3:::', !Ref DocsBucket, '/*' ]]

  DocsBucketPolicy: # allow public access
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DocsBucket
      PolicyDocument:
        Statement:
          - Sid: allow public read
            Effect: Allow
            Principal: '*'
            Action:
            - s3:GetObject
            Resource: !Join [ '', [ 'arn:aws:s3:::', !Ref DocsBucket, '/*' ]]
          - Sid: Allow travis user access
            Effect: Allow
            Principal:
              AWS: !GetAtt TravisUser.Arn
            Action:
            - s3:ListBucket
            - s3:GetObject
            - s3:GetObjectAcl
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:DeleteObject
            - s3:AbortMultipartUpload
            Resource:
            - !Join [ '', [ 'arn:aws:s3:::', !Ref DocsBucket ]]
            - !Join [ '', [ 'arn:aws:s3:::', !Ref DocsBucket, '/*' ]]

  DDNSRecord: # create DNS record for docs prototypes bucket
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref DHostName
      Comment: DNS record for docs prototypes S3 bucket
      HostedZoneId: !Ref ZoneId
      Type: A
      AliasTarget:
        HostedZoneId: !FindInMap [ RegionMap, !Ref 'AWS::Region', S3hostedzoneID]
        DNSName: !FindInMap [ RegionMap, !Ref 'AWS::Region', websiteendpoint]

