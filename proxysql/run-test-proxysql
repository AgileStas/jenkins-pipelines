#!/bin/bash

set -o errexit
set -o xtrace

ROOT_DIR=$(cd $(dirname $0)/sources/proxysql; pwd -P)
SCRIPTS_DIR=$(cd $(dirname $0) && pwd -P)
SOURCE_IMAGE=${1:-centos:7}

docker run --rm \
    --security-opt seccomp=unconfined \
    --mount type=bind,source=${ROOT_DIR},destination=/tmp/proxysql \
    --mount type=bind,source=${SCRIPTS_DIR},destination=/tmp/scripts \
    perconalab/pxc-build:${SOURCE_IMAGE//[:\/]/-} \
    sh -c "
    set -o errexit
    set -o xtrace

    if [ -f /usr/bin/yum ]; then
        sudo yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm || true
        sudo percona-release enable tools testing
        sudo yum -y install lsof socat gnutls proxysql2
    fi
    #
    if [ -f /usr/bin/apt-get ]; then
        sudo apt-get update && sudo apt-get -y install lsb-release gnupg2
        wget https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb
        sudo dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb
        sudo percona-release enable tools testing
        sudo apt-get update
        sudo apt-get -y install lsof socat libgnutls-dev proxysql2

    fi

    mkdir /tmp/results
    cp /tmp/proxysql/results/*.tar.gz /tmp/results

    bash -x /tmp/scripts/test-proxysql /tmp/results
    rsync -a --prune-empty-dirs --include '*/' --include '*.err' --exclude '*' /tmp/results/WORKDIR/logs
    sudo tar -czf "qa_proxysql_logs.tar.gz" /tmp/results/WORKDIR/logs
    sudo mv ./qa_proxysql_logs.tar.gz /tmp/proxysql/results/
    sudo mv /tmp/results/WORKDIR/*.output  /tmp/results/WORKDIR/*.xml /tmp/proxysql/results/
    sudo chown $(id -u):$(id -g) /tmp/proxysql/results/*.output /tmp/proxysql/results/*.xml
"
