#!/bin/bash

set -o errexit
set -o xtrace

ROOT_DIR=$(cd $(dirname $0)/sources/proxysql; pwd -P)
SCRIPTS_DIR=$(cd $(dirname $0) && pwd -P)
SOURCE_IMAGE=${1:-centos:7}

docker run --rm \
    --cap-add SYS_PTRACE \
    --mount type=bind,source=${ROOT_DIR},destination=/tmp/proxysql \
    --mount type=bind,source=${SCRIPTS_DIR},destination=/tmp/scripts \
    perconalab/pxc-build:${SOURCE_IMAGE//[:\/]/-} \
    sh -c "
    set -o errexit
    set -o xtrace
    export PAT_TAG='${PAT_TAG}'
    if [ -f /usr/bin/yum ]; then
        RHEL=$(rpm --eval %rhel)
        ARCH=$(echo $(uname -m) | sed -e 's:i686:i386:g')
        if [ $RHEL = 8 ]; then
            sudo yum -y install python2 gnutls-devel libtool || true
            sudo ln -s /usr/bin/python2.7 /usr/bin/python
        fi
        sudo yum -y install wget
        #
        RHEL=$(rpm --eval %rhel)
        #
        sudo wget -O /etc/yum.repos.d/percona-dev.repo http://jenkins.percona.com/yum-repo/percona-dev.repo
        if [ $RHEL -eq 6 ]; then
        	sudo yum -y install percona-devtoolset-gcc percona-devtoolset-binutils percona-devtoolset-gcc-c++
            sudo yum -y install automake bzip2 cmake make g++ gcc git openssl openssl-devel gnutls libtool patch
            sudo yum -y install gnutls-devel libtool || true
        	sudo yum -y install epel-release
        	sudo sed -i "s/mirrorlist=https/mirrorlist=http/" /etc/yum.repos.d/epel.repo
        	sudo yum -y install http://repo.okay.com.mx/centos/6/x86_64/release/okay-release-1-1.noarch.rpm || true
        	sudo yum -y upgrade automake autoconf
        else
            sudo yum -y install automake bzip2 cmake make gcc-c++ gcc git openssl openssl-devel gnutls gnutls-devel libtool patch
        fi
        #
        sudo yum -y upgrade
        sudo yum -y install cmake make gcc gcc-c++ rpm-build perl
        # missing deps
          sudo yum -y install openssl-devel
        if [ $RHEL = 8 ]; then
            sudo ln -s /usr/bin/python2.7 /usr/bin/python
        fi
    fi

    mkdir /tmp/results
    bash -x  /tmp/scripts/build-binary-proxysql /tmp/results /tmp/proxysql
    sudo rm -rf /tmp/proxysql/results
    sudo mkdir /tmp/proxysql/results
    sudo mv /tmp/results/*.tar.gz /tmp/proxysql/results/
    sudo chown -R $(id -u):$(id -g) /tmp/proxysql/results
"
