#!/bin/bash
#
# Execute this tool to test binary releases
#
#  possible jenkins vars:
#      CMAKE_BUILD_TYPE = (RelWithDebInfo Debug)
#      DEFAULT_TESTING = (yes no)
#      QA_ARGS

set -o errexit
set -o xtrace

function process_proxysql_output {
# parameters are:
  local TESTSUITE=${1}
  local INFILE=${2}
  local OUTFILE=${3}

  export LC_ALL=C
  cat proxysql_qa.output | grep 'ok \|not ok' | gawk 'BEGIN     { print "<testsuite name=\"@@TESTSUITE@@\" tests=\"@@PASSED@@\" failures=\"@@FAILURES@@\">" }
      $1 ~ /ok/     { printf "\t<testcase name=\"%s\"><passed/></testcase>\n", $0}
      $1 ~ /not/    { printf "\t<testcase name=\"%s\"><failure/></testcase>\n", $0}
      END { print "</testsuite>" }' > ${OUTFILE}

  PASSED=$(grep -c 'name=\"ok' ${OUTFILE} ||:)
  FAILURES=$(grep -c '<failure/>' ${OUTFILE} ||:)

  sed -i.bak -e "s:@@TESTSUITE@@:${TESTSUITE}:g" ${OUTFILE}
  sed -i.bak -e "s:@@PASSED@@:${PASSED}:g" ${OUTFILE}
  sed -i.bak -e "s:@@FAILURES@@:${FAILURES}:g" ${OUTFILE}
}

WORKDIR_ABS=$(cd ${1:-./build/proxysql}; pwd -P)
rm -fr ${WORKDIR_ABS}/WORKDIR ${WORKDIR_ABS}/PXB ${WORKDIR_ABS}/PXC
mkdir -p ${WORKDIR_ABS}/WORKDIR/PROXY  ${WORKDIR_ABS}/WORKDIR/PXC

PXC_VERSION="5.7"

if [[ "${PXC_VERSION}" == "8.0" ]]; then
    sudo wget -q -O ${WORKDIR_ABS}/WORKDIR/Percona-XtraDB-Cluster_8.0.20-11.3_Linux.x86_64.glibc2.12-minimal.tar.gz https://www.percona.com/downloads/Percona-XtraDB-Cluster-LATEST/Percona-XtraDB-Cluster-8.0.20-11.3/binary/tarball/Percona-XtraDB-Cluster_8.0.20-11.3_Linux.x86_64.glibc2.12-minimal.tar.gz
    sudo tar -C ${WORKDIR_ABS}/WORKDIR/PXC --strip-components=1 -zxpf $(ls $WORKDIR_ABS/WORKDIR/Percona-XtraDB-Cluster_8.0.20-11.3_Linux.x86_64.glibc2.12-minimal.tar.gz | head -1)
elif [[ "${PXC_VERSION}" == "5.7" ]]; then
    sudo wget -q -O ${WORKDIR_ABS}/WORKDIR/Percona-XtraDB-Cluster-5.7.31-rel34-45.3.Linux.x86_64.glibc2.12-minimal.tar.gz  https://www.percona.com/downloads/Percona-XtraDB-Cluster-57/Percona-XtraDB-Cluster-5.7.31-31.45-3/binary/tarball/Percona-XtraDB-Cluster-5.7.31-rel34-45.3.Linux.x86_64.glibc2.12-minimal.tar.gz
    sudo tar -C ${WORKDIR_ABS}/WORKDIR/PXC --strip-components=1 -zxpf $(ls $WORKDIR_ABS/WORKDIR/Percona-XtraDB-Cluster-5.7.31-rel34-45.3.Linux.x86_64.glibc2.12-minimal.tar.gz | head -1)
    if [ -f /usr/bin/yum ]; then
        sudo yum remove -y Percona-Server-shared-56-5.6.49-rel89.0.1.el7.x86_64
        sudo yum install -y percona-xtrabackup-24 Percona-XtraDB-Cluster-57 proxysql2
    else
        sudo apt update -y
        sudo apt install -y percona-xtrabackup-24 percona-xtradb-cluster-client-5.7 proxysql2
    fi
fi

tar -C ${WORKDIR_ABS}/WORKDIR/PROXY  --strip-components=1 -zxpf $(ls $WORKDIR_ABS/proxysql*.tar.gz | head -1)

pushd ${WORKDIR_ABS}/WORKDIR
sudo tar -xzf $WORKDIR_ABS/proxysql*.tar.gz -C ${WORKDIR_ABS}/WORKDIR
sudo cp $WORKDIR_ABS/WORKDIR/PROXY/etc/proxysql.cnf /etc/
sudo cp $WORKDIR_ABS/WORKDIR/PROXY/etc/proxysql-admin.cnf /etc/
sudo cp $WORKDIR_ABS/WORKDIR/PROXY/usr/bin/* /usr/bin
cp $WORKDIR_ABS/WORKDIR/PROXY/usr/bin/proxysql-* $WORKDIR_ABS/WORKDIR/
sudo chmod 644 /etc/proxysql*.cnf
status=0
# Running ProxySQL QA script
if [ -f /usr/bin/yum ]; then
    sudo cp /etc/hosts ${WORKDIR_ABS}/hosts.new
    sudo sed -i 's/::1*.*localhost /::1 /' ${WORKDIR_ABS}/hosts.new
    sudo cp -f ${WORKDIR_ABS}/hosts.new /etc/hosts
fi
sudo sed -i 's/wsrep_sst_method=rsync/wsrep_sst_method=xtrabackup-v2/g' $WORKDIR_ABS/WORKDIR/PROXY/tests/proxysql-admin-testsuite.sh
sudo bash $WORKDIR_ABS/WORKDIR/PROXY/tests/proxysql-admin-testsuite.sh \
$WORKDIR_ABS/WORKDIR | tee $WORKDIR_ABS/WORKDIR/proxysql_qa.output || status=$?
process_proxysql_output PROXYSQL "$WORKDIR_ABS/WORKDIR/proxysql_qa.output" "${WORKDIR_ABS}/WORKDIR/junit.xml"
popd

exit $status
