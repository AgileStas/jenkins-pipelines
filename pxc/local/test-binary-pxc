#!/bin/bash
#
# Execute this tool to test binary releases
#
#  possible jenkins vars:
#      CMAKE_BUILD_TYPE = (RelWithDebInfo Debug)
#      DEFAULT_TESTING = (yes no)
#      MTR_ARGS
#      MTR_REPEAT
#      FULL_MTR = (yes no)
#      GALERA_PARALLEL_RUN
#      MTR_SUITES
#      PARALLEL_RUN

set -o errexit
set -o xtrace

WORKDIR_ABS=$(cd ${1:-./build/pxc}; pwd -P)
rm -fr ${WORKDIR_ABS}/PXC
mkdir -p ${WORKDIR_ABS}/PXC/sql
tar -C ${WORKDIR_ABS}/PXC --strip-components=1 -zxpf $(ls $WORKDIR_ABS/*.tar.gz | head -1)

export WSREP_PROVIDER=${WORKDIR_ABS}/PXC/lib/libgalera_smm.so
cd ${WORKDIR_ABS}/PXC/mysql-test
TESTCASE_TIMEOUT=30
# CentOS 6 & 7
if [[ -f /opt/rh/devtoolset-7/enable ]]; then
    source /opt/rh/devtoolset-7/enable
fi

JEMALLOC=$(find /lib* /usr/lib* /usr/local/lib* -type f -name 'libjemalloc.so*' | head -n1)
EATMYDATA=$(find /lib* /usr/lib* /usr/local/lib* -type f -name '*eatmyda*.so*' | head -n1)

if [[ -z "${EATMYDATA}" ]]; then
  echo "No libeatmydata.so lib found"
  exit 1
fi

if [[ -z "${JEMALLOC}" ]]; then
  echo "No jemalloc lib found"
  exit 1
fi
MTR_ARGS+="  --big-test "

function process_mtr_output {
# parameters are:
  local TESTSUITE=${1}
  local INFILE=${2}
  local OUTFILE=${3}

  export LC_ALL=C
  # `grep` will be printing each MTR testcase through matching result status from the MTR output log and `awk` will segregate unique testcases based on success/failure using the result status and store it in XML file
  egrep -a -o '[[:alpha:]]+(_[[:alnum:]]+)?(\.\/)?.*\[ .* \].*$' ${INFILE} \
    | awk '{ if ($3 == "disabled" || $3 == "skipped") { print $1 " " $3 } else if (match($2, /^w[0-9]/)) { print $1 " " $4 " " $6 } else { print $1 "_" substr($2,2,length($2)-2) $5 " " $7 } }' \
    | sort \
    | awk 'prev && ($1 != prev) {print seen[prev]} {seen[$1] = $0; prev = $1} END {print seen[$1]}' \
    | gawk 'BEGIN     { print "<testsuite name=\"@@TESTSUITE@@\" tests=\"@@PASSED@@\" failures=\"@@FAILURES@@\" disabled=\"@@DISABLED@@\" skipped=\"@@SKIPPED@@\">" }
      $2 ~ /pass/     { printf "\t<testcase name=\"%s\" time=\"%.3f\"></testcase>\n", $1, $NF/1000.0 }
      $2 ~ /disabled/ { printf "\t<testcase name=\"%s\"><skipped/></testcase>\n", $1 }
      $2 ~ /skipped/   { printf "\t<testcase name=\"%s\"><skipped/></testcase>\n", $1 }
      $2 ~ /fail/     { printf "\t<testcase name=\"%s\"><failure/></testcase>\n", $1 }
      END { print "</testsuite>" }'  > ${OUTFILE}.tmp

  gawk '!seen[$0]++' < ${OUTFILE}.tmp > ${OUTFILE}
  rm -f ${OUTFILE}.tmp
#
  PASSED=$(grep -c 'time=' ${OUTFILE} ||:)
  FAILURES=$(grep -c '<failure/>' ${OUTFILE} ||:)
  DISABLED=$(grep -c '\[ disabled \]' ${INFILE} ||:)
  SKIPPED=$(grep -c '\[ skipped \]' ${INFILE} ||:)
#
  sed -i.bak -e "s:@@TESTSUITE@@:${TESTSUITE}:g" ${OUTFILE}
  sed -i.bak -e "s:@@PASSED@@:${PASSED}:g" ${OUTFILE}
  sed -i.bak -e "s:@@FAILURES@@:${FAILURES}:g" ${OUTFILE}
  sed -i.bak -e "s:@@DISABLED@@:${DISABLED}:g" ${OUTFILE}
  sed -i.bak -e "s:@@SKIPPED@@:${SKIPPED}:g" ${OUTFILE}
  sed -i.bak -e "s: \[::g" ${OUTFILE}
}

if [[ -n "${MTR_REPEAT}" ]]; then
  MTR_ARGS+=" --repeat=${MTR_REPEAT}"
fi

if [[ "${MTR_ARGS}" == *"--suite=max_parts"* ]]; then
    TESTCASE_TIMEOUT=$((TESTCASE_TIMEOUT * 3))
fi

if [[ $MTR_ARGS == *"--big-test"* ]] || [[ $MTR_ARGS == *"--only-big-test"* ]]; then
    TESTCASE_TIMEOUT=$((TESTCASE_TIMEOUT * 2))
fi

status=0
#
# Running MTR test cases
if [[ "${DEFAULT_TESTING}" != "no" ]]; then

    if [[ "${ANALYZER_OPTS}" == *WITH_VALGRIND=ON* ]]; then
        MYSQLD_ENV="${ADD_TO_LD_PRELOAD:-}${EATMYDATA}"
    else
        MYSQLD_ENV="${ADD_TO_LD_PRELOAD:-}${JEMALLOC}:${EATMYDATA}"
    fi
    if [ ${FULL_MTR} == "no" ]; then
        # galera suite
        if echo "$MTR_SUITES" | grep -Eq "galera[ ,]"; then
           mkdir var1
           MTR_BUILD_THREAD=auto ./mysql-test-run.pl \
              --result-file --suite=galera \
              ${MTR_ARGS} \
              --force --xml-report=${WORKDIR_ABS}/galera_mtr.xml \
              --max-test-fail=0 \
              --suite-timeout=9999 --parallel $GALERA_PARALLEL_RUN \
              --port-group-size=20 --vardir=var1 \
              --testcase-timeout=${TESTCASE_TIMEOUT} \
              | tee ${WORKDIR_ABS}/galera_mtr.output || status=$?
    
            killall -9 mysqld || true
		    sed -i '1d' ${WORKDIR_ABS}/galera_mtr.xml
		    sed -i '/<!\[CDATA/,/]]>/d' ${WORKDIR_ABS}/galera_mtr.xml
		    sed -r 's/comment=.*.\/>/\/>/' ${WORKDIR_ABS}/galera_mtr.xml > ${WORKDIR_ABS}/galera_mtr.tmp
		    sed -r 's/status=\"skipped\".*.\/>/ > <skipped \/> <\/testcase>/' ${WORKDIR_ABS}/galera_mtr.tmp >  ${WORKDIR_ABS}/galera_mtr1.tmp
		    sed -r 's/status=\"disabled\".*.\/>/ > <disabled \/> <\/testcase>/' ${WORKDIR_ABS}/galera_mtr1.tmp >  ${WORKDIR_ABS}/galera_junit.xml
		    rm -f ${WORKDIR_ABS}/galera_mtr*.tmp ${WORKDIR_ABS}/galera_mtr.xml
        fi
    
        # galera_3nodes suite
        if echo "$MTR_SUITES" | grep -Eq "galera_3nodes[ ,]"; then
           mkdir var2
           MTR_BUILD_THREAD=auto ./mysql-test-run.pl \
              --result-file --suite=galera_3nodes \
              ${MTR_ARGS} \
              --force --xml-report=${WORKDIR_ABS}/galera3_mtr.xml \
              --max-test-fail=0 \
              --suite-timeout=9999 --parallel $GALERA_PARALLEL_RUN \
              --port-group-size=20 --vardir=var2 \
              --testcase-timeout=${TESTCASE_TIMEOUT} \
              | tee ${WORKDIR_ABS}/galera3_mtr.output || status=$?
    
            killall -9 mysqld || true
		    sed -i '1d' ${WORKDIR_ABS}/galera3_mtr.xml
		    sed -i '/<!\[CDATA/,/]]>/d' ${WORKDIR_ABS}/galera3_mtr.xml
		    sed -r 's/comment=.*.\/>/\/>/' ${WORKDIR_ABS}/galera3_mtr.xml > ${WORKDIR_ABS}/galera3_mtr.tmp
		    sed -r 's/status=\"skipped\".*.\/>/ > <skipped \/> <\/testcase>/' ${WORKDIR_ABS}/galera3_mtr.tmp >  ${WORKDIR_ABS}/galera3_mtr1.tmp
		    sed -r 's/status=\"disabled\".*.\/>/ > <disabled \/> <\/testcase>/' ${WORKDIR_ABS}/galera3_mtr1.tmp >  ${WORKDIR_ABS}/galera3_junit.xml
		    rm -f ${WORKDIR_ABS}/galera3_mtr*.tmp ${WORKDIR_ABS}/galera3_mtr.xml
        fi

        # galera_sr suite
        if echo "$MTR_SUITES" | grep -Eq "galera_sr[ ,]"; then
           mkdir var3
           MTR_BUILD_THREAD=auto ./mysql-test-run.pl \
              --result-file --suite=galera_sr \
              ${MTR_ARGS} \
              --force --xml-report=${WORKDIR_ABS}/galera_sr_mtr.xml \
              --max-test-fail=0 \
              --suite-timeout=9999 --parallel $GALERA_PARALLEL_RUN \
              --port-group-size=20 --vardir=var3 \
              --testcase-timeout=${TESTCASE_TIMEOUT} \
              | tee ${WORKDIR_ABS}/galera_sr_mtr.output || status=$?
    
            killall -9 mysqld || true
		    sed -i '1d' ${WORKDIR_ABS}/galera_sr_mtr.xml
		    sed -i '/<!\[CDATA/,/]]>/d' ${WORKDIR_ABS}/galera_sr_mtr.xml
		    sed -r 's/comment=.*.\/>/\/>/' ${WORKDIR_ABS}/galera_sr_mtr.xml > ${WORKDIR_ABS}/galera_sr_mtr.tmp
		    sed -r 's/status=\"skipped\".*.\/>/ > <skipped \/> <\/testcase>/' ${WORKDIR_ABS}/galera_sr_mtr.tmp >  ${WORKDIR_ABS}/galera_sr_mtr1.tmp
		    sed -r 's/status=\"disabled\".*.\/>/ > <disabled \/> <\/testcase>/' ${WORKDIR_ABS}/galera_sr_mtr1.tmp >  ${WORKDIR_ABS}/galera_sr_junit.xml
		    rm -f ${WORKDIR_ABS}/galera_sr_mtr*.tmp ${WORKDIR_ABS}/galera_sr_mtr.xml
        fi
		
        # galera_3nodes_sr suite
        if echo "$MTR_SUITES" | grep -Eq "galera_3nodes_sr[ ,]"; then
           mkdir var4
           MTR_BUILD_THREAD=auto ./mysql-test-run.pl \
              --result-file --suite=galera_3nodes_sr \
              ${MTR_ARGS} \
              --force --xml-report=${WORKDIR_ABS}/galera3_sr_mtr.xml \
              --max-test-fail=0 \
              --suite-timeout=9999 --parallel $GALERA_PARALLEL_RUN \
              --port-group-size=20 --vardir=var4 \
              --testcase-timeout=${TESTCASE_TIMEOUT} \
              | tee ${WORKDIR_ABS}/galera3_sr_mtr.output || status=$?
    
            killall -9 mysqld || true
		    sed -i '1d' ${WORKDIR_ABS}/galera3_sr_mtr.xml
		    sed -i '/<!\[CDATA/,/]]>/d' ${WORKDIR_ABS}/galera3_sr_mtr.xml
		    sed -r 's/comment=.*.\/>/\/>/' ${WORKDIR_ABS}/galera3_sr_mtr.xml > ${WORKDIR_ABS}/galera3_sr_mtr.tmp
		    sed -r 's/status=\"skipped\".*.\/>/ > <skipped \/> <\/testcase>/' ${WORKDIR_ABS}/galera3_sr_mtr.tmp >  ${WORKDIR_ABS}/galera3_sr_mtr1.tmp
		    sed -r 's/status=\"disabled\".*.\/>/ > <disabled \/> <\/testcase>/' ${WORKDIR_ABS}/galera3_sr_mtr1.tmp >  ${WORKDIR_ABS}/galera3_sr_junit.xml
		    rm -f ${WORKDIR_ABS}/galera3_sr_mtr*.tmp ${WORKDIR_ABS}/galera3_sr_mtr.xml
        fi
		
        # sys_vars suite
        if echo "$MTR_SUITES" | grep -Eq "sys_vars"; then
           mkdir var5
           MTR_BUILD_THREAD=auto ./mysql-test-run.pl \
              --result-file --suite=sys_vars \
              ${MTR_ARGS} \
              --force --xml-report=${WORKDIR_ABS}/sys_vars.xml \
              --max-test-fail=0 \
              --suite-timeout=9999 --parallel $PARALLEL_RUN \
              --port-group-size=20 --vardir=var5 \
              --testcase-timeout=${TESTCASE_TIMEOUT} \
              | tee ${WORKDIR_ABS}/sys_vars.output || status=$?
    		  
            killall -9 mysqld || true
		    sed -i '1d' ${WORKDIR_ABS}/sys_vars.xml
		    sed -i '/<!\[CDATA/,/]]>/d' ${WORKDIR_ABS}/sys_vars.xml
		    sed -r 's/comment=.*.\/>/\/>/' ${WORKDIR_ABS}/sys_vars.xml > ${WORKDIR_ABS}/sys_vars.tmp
		    sed -r 's/status=\"skipped\".*.\/>/ > <skipped \/> <\/testcase>/' ${WORKDIR_ABS}/sys_vars.tmp >  ${WORKDIR_ABS}/sys_vars1.tmp
		    sed -r 's/status=\"disabled\".*.\/>/ > <disabled \/> <\/testcase>/' ${WORKDIR_ABS}/sys_vars1.tmp >  ${WORKDIR_ABS}/sys_vars_junit.xml
		    rm -f ${WORKDIR_ABS}/sys_vars*.tmp ${WORKDIR_ABS}/sys_vars.xml
        fi
    else
        echo "Running full MTR"
        mkdir var1
        MTR_BUILD_THREAD=auto ./mysql-test-run.pl \
           --result-file \
           ${MTR_ARGS} \
           --force --xml-report=${WORKDIR_ABS}/mtr.xml \
           --max-test-fail=0 \
           --suite-timeout=9999 --parallel $GALERA_PARALLEL_RUN \
           --port-group-size=20 --vardir=var1 \
           --testcase-timeout=${TESTCASE_TIMEOUT} \
           | tee ${WORKDIR_ABS}/mtr.output || status=$?
    
        killall -9 mysqld || true
	    sed -i '1d' ${WORKDIR_ABS}/mtr.xml
	    sed -i '/<!\[CDATA/,/]]>/d' ${WORKDIR_ABS}/mtr.xml
	    sed -r 's/comment=.*.\/>/\/>/' ${WORKDIR_ABS}/mtr.xml > ${WORKDIR_ABS}/junit.tmp
	    sed -r 's/status=\"skipped\".*.\/>/ > <skipped \/> <\/testcase>/' ${WORKDIR_ABS}/junit.tmp >  ${WORKDIR_ABS}/junit1.tmp
	    sed -r 's/status=\"disabled\".*.\/>/ > <disabled \/> <\/testcase>/' ${WORKDIR_ABS}/junit1.tmp >  ${WORKDIR_ABS}/junit.xml
	    rm -f ${WORKDIR_ABS}/junit*.tmp ${WORKDIR_ABS}/mtr.xml
    fi
fi

exit $status
