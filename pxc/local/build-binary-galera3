#!/bin/bash


set -o errexit
set -o xtrace


# ------------------------------------------------------------------------------
# Declare all input variables
# ------------------------------------------------------------------------------
JOB_CMAKE=${JOB_CMAKE:-cmake}
COMPILER=${COMPILER:-default}
CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE:-RelWithDebInfo}
MAKE_OPTS=${MAKE_OPTS:--j$(grep -c ^processor /proc/cpuinfo)}
CMAKE_OPTS=${CMAKE_OPTS:-}
BUILD_COMMENT=${BUILD_COMMENT:-}
TAG=${TAG:-}
DIST_NAME=${DIST_NAME:-}
SSL_VER=${SSL_VER:-}
TARGET_CFLAGS=${TARGET_CFLAGS:-}


# ------------------------------------------------------------------------------
# set working dir
# ------------------------------------------------------------------------------
mkdir -p ${1:-./build}
WORKDIR=$(cd ${1:-./build}; pwd -P)
INSTALL_DIR=${WORKDIR}/DESTDIR
DOWNLOAD_DIR=${WORKDIR}/source_downloads
mkdir -p ${INSTALL_DIR} ${DOWNLOAD_DIR}
SOURCEDIR=$(cd ${2:-$(dirname $0)/../sources/galera3}; pwd -P)


# ------------------------------------------------------------------------------
# Set OS/Arch flags
# ------------------------------------------------------------------------------
TARGET_ARCH="$(uname -m)"

export CC=${CC:-gcc}
export CXX=${CXX:-g++}
export CFLAGS=${CFLAGS:-}
export CXXFLAGS=${CXXFLAGS:-}
export MAKE_JFLAG=-j$(grep -c ^processor /proc/cpuinfo)

# ------------------------------------------------------------------------------
# Set compile options
# ------------------------------------------------------------------------------
if [[ "$COMPILER" != "default" ]]; then
    export CC=${COMPILER}
    export CXX=$(echo ${COMPILER} | sed -e 's/gcc/g++/; s/clang/clang++/')
fi

# ------------------------------------------------------------------------------
# Finaly, compile!
# ------------------------------------------------------------------------------

pushd ${SOURCEDIR}
    if [[ "${CMAKE_BUILD_TYPE}" = "Debug" ]]; then
       scons debug=0
    else
       scons
    fi
popd

