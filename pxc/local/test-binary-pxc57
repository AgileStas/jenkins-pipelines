#!/bin/bash
#
# Execute this tool to test binary releases
#
#  possible jenkins vars:
#      CMAKE_BUILD_TYPE = (RelWithDebInfo Debug)
#      DEFAULT_TESTING = (yes no)
#      MTR_ARGS
#      MTR_REPEAT

set -o errexit
set -o xtrace

WORKDIR_ABS=$(cd ${1:-./build/pxc}; pwd -P)
rm -fr ${WORKDIR_ABS}/PXC
mkdir -p ${WORKDIR_ABS}/PXC/sql
rm -fr ${WORKDIR_ABS}/PXB
mkdir -p ${WORKDIR_ABS}/PXB
tar -C ${WORKDIR_ABS}/PXC --strip-components=1 -zxpf $(ls $WORKDIR_ABS/pxc57.tar.gz | head -1)
tar -C ${WORKDIR_ABS}/PXB --strip-components=1 -zxpf $(ls $WORKDIR_ABS/pxb24.tar.gz | head -1)

export WSREP_PROVIDER=${WORKDIR_ABS}/PXC/lib/libgalera_smm.so
export XB_PLUGIN_DIR=${WORKDIR_ABS}/PXB/lib/plugin
cd ${WORKDIR_ABS}/PXC/mysql-test
TESTCASE_TIMEOUT=30
PARALLEL=$(grep -c ^processor /proc/cpuinfo)
# CentOS 6 & 7
if [[ -f /opt/rh/devtoolset-7/enable ]]; then
    source /opt/rh/devtoolset-7/enable
fi

sudo cp ${WORKDIR_ABS}/PXB/bin/* /usr/bin/

JEMALLOC=$(find /lib* /usr/lib* /usr/local/lib* -type f -name 'libjemalloc.so*' | head -n1)
EATMYDATA=$(find /lib* /usr/lib* /usr/local/lib* -type f -name '*eatmyda*.so*' | head -n1)

if [[ -z "${EATMYDATA}" ]]; then
  echo "No libeatmydata.so lib found"
  exit 1
fi

if [[ -z "${JEMALLOC}" ]]; then
  echo "No jemalloc lib found"
  exit 1
fi
MTR_ARGS+="  --big-test "

if [[ -n "${MTR_REPEAT}" ]]; then
  MTR_ARGS+=" --repeat=${MTR_REPEAT}"
fi

if [[ "${MTR_ARGS}" == *"--suite=max_parts"* ]]; then
    TESTCASE_TIMEOUT=$((TESTCASE_TIMEOUT * 3))
fi

if [[ $MTR_ARGS == *"--big-test"* ]] || [[ $MTR_ARGS == *"--only-big-test"* ]]; then
    TESTCASE_TIMEOUT=$((TESTCASE_TIMEOUT * 2))
fi

status=0
#
# Running MTR test cases
if [[ "${DEFAULT_TESTING}" != "no" ]]; then

    if [[ "${ANALYZER_OPTS}" == *WITH_VALGRIND=ON* ]]; then
        MYSQLD_ENV="${ADD_TO_LD_PRELOAD:-}${EATMYDATA}"
    else
        MYSQLD_ENV="${ADD_TO_LD_PRELOAD:-}${JEMALLOC}:${EATMYDATA}"
    fi

  MTR_BUILD_THREAD=auto ./mysql-test-run.pl \
        --parallel=${PARALLEL} \
        --result-file \
        ${MTR_ARGS} \
        --force --xml-report=${WORKDIR_ABS}/mtr.xml \
        --max-test-fail=0 \
        --suite-timeout=9999 \
        --testcase-timeout=${TESTCASE_TIMEOUT} \
        | tee ${WORKDIR_ABS}/mtr.output || status=$?
  
  sed -i '1d' ${WORKDIR_ABS}/mtr.xml
  sed -i '/<!\[CDATA/,/]]>/d' ${WORKDIR_ABS}/mtr.xml
  sed -r 's/comment=.*.\/>/\/>/' ${WORKDIR_ABS}/mtr.xml > ${WORKDIR_ABS}/junit.tmp
  sed -r 's/status=\"skipped\".*.\/>/ > <skipped \/> <\/testcase>/' ${WORKDIR_ABS}/junit.tmp >  ${WORKDIR_ABS}/junit1.tmp
  sed -r 's/status=\"disabled\".*.\/>/ > <disabled \/> <\/testcase>/' ${WORKDIR_ABS}/junit1.tmp >  ${WORKDIR_ABS}/junit.xml
  rm -f ${WORKDIR_ABS}/junit*.tmp ${WORKDIR_ABS}/mtr.xml
fi

exit $status
